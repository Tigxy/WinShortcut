<UserControl x:Class="win_short_cut.Pages.ShortcutPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:Extensions="clr-namespace:win_short_cut.Extensions"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButton_VisibilityTemplate">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderThickness="1" BorderBrush="Black">
                            <Grid VerticalAlignment="Center">
                                <TextBlock Name="Text" FontFamily="Segoe MDL2 Assets" Text="&#xE7B3;" Background="Transparent"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" Padding="3"/>
                                <TextBlock Name="TextOverlay" FontFamily="Segoe MDL2 Assets" Text="&#xE894;"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" Padding="3"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="TextOverlay" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="Text" Property="Background" Value="LightGreen" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Click="btnBack_Click"
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    ToolTip="Recreate all shortcuts">
                <materialDesign:PackIcon 
                    Width="{StaticResource ControlIconSize}"
                    Height="{StaticResource ControlIconSize}"
                    Kind="ArrowLeft"/>
            </Button>

            <TextBlock Grid.Column="1" Text="{Binding PageTitle, FallbackValue=Edit shortcut}"  Margin="5" VerticalAlignment="Center"
                    Style="{StaticResource MaterialDesignHeadline6TextBlock}"/>

            <Button Grid.Column="2" Click="btnStore_Click"
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    ToolTip="Recreate all shortcuts">
                <materialDesign:PackIcon 
                    Width="{StaticResource ControlIconSize}"
                    Height="{StaticResource ControlIconSize}"
                    Kind="ContentSaveOutline"/>
            </Button>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Name" Margin="0 5 5 5" VerticalAlignment="Center"/>
            <TextBox x:Name="tb_ShortcutName" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" MinWidth="100" Margin="0 5" Padding="2"
                     Text="{Binding Shortcut.Name, UpdateSourceTrigger=PropertyChanged}" FontFamily="Courier New"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Description" Margin="0 5 5 5" VerticalAlignment="Center"/>
            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Shortcut.Description, UpdateSourceTrigger=PropertyChanged}" Margin="0 5" Padding="2"/>
        </Grid>

        <TextBlock Grid.Row="2" Text="parallel execution blocks" Margin="0 5" FontSize="16" FontWeight="SemiBold"/>

        <ListView x:Name="lv_Blocks" Grid.Row="3" ItemsSource="{Binding Shortcut.Containers}" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0 4"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Rectangle Fill="LightGray" Width="5" Margin="0 0 5 0"/>
                        <StackPanel Grid.Column="1" HorizontalAlignment="Stretch" CanHorizontallyScroll="False">
                            <Grid Margin="0 5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <CheckBox Grid.Row="0"
                                      IsChecked="{Binding ShowDescriptionFields, UpdateSourceTrigger=PropertyChanged}" 
                                      Content="show description fields" VerticalContentAlignment="Center"/>

                                    <Grid Grid.Row="1" Visibility="{Binding ShowDescriptionFields, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Column="0" Text="container description" VerticalAlignment="Center" Margin="0 0 5 0"/>
                                        <TextBox Grid.Column="1" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Padding="3" TextWrapping="Wrap"/>
                                    </Grid>

                                    <StackPanel Orientation="Vertical" Grid.Row="2">
                                        <CheckBox Grid.Column="0" Margin="0 0 0 0"
                                      IsChecked="{Binding KeepOpenOnceDone, UpdateSourceTrigger=PropertyChanged}" 
                                      Content="keep console open once done" VerticalContentAlignment="Center"/>
                                        <CheckBox Grid.Column="0" Margin="0 0 0 0"
                                      IsChecked="{Binding ExecuteMinimized, UpdateSourceTrigger=PropertyChanged}" 
                                      Content="execute minimized" VerticalContentAlignment="Center"/>
                                        <CheckBox Grid.Column="1" Margin="0 0 0 0"
                                      IsChecked="{Binding ConcatenateCommands, UpdateSourceTrigger=PropertyChanged}" 
                                      Content="concatenate commands for execution" VerticalContentAlignment="Center">
                                            <CheckBox.ToolTip>
                                                <TextBlock>
                                            Commands are concatenated similar to 'cmd1 &amp;&amp; cmd2'.
                                            <LineBreak/>
                                            May be necessary e.g. when changing modifying current shell by 'conda activate' or the likes.
                                                </TextBlock>
                                            </CheckBox.ToolTip>
                                        </CheckBox>
                                    </StackPanel>
                                </Grid>

                                <Button Grid.Column="1" FontFamily="Segoe MDL2 Assets" Content="&#xEF2C;"
                                    Padding="5" FontSize="16" Margin="5 0 0 0" Click="btnRemoveContainer_Click"/>
                            </Grid>
                            <TextBlock Text="commands" Margin="0" FontSize="14" FontWeight="SemiBold"/>
                            <ListView x:Name="lv_Commands" ItemsSource="{Binding Commands}" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      PreviewMouseWheel="lv_Commands_PreviewMouseWheel"
                                      dd:DragDrop.IsDragSource="True"
                                      dd:DragDrop.IsDropTarget="True">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Margin" Value="0 2"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="Description"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListView}, 
                                                Path=DataContext.ShowDescriptionFields, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                     />
                                            <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="Command"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListView}, 
                                                Path=DataContext.ShowDescriptionFields, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                     />
                                            <ToggleButton Grid.Row="0" Grid.Column="1" Margin="5 2" Style="{StaticResource ToggleButton_VisibilityTemplate}" 
                                                          IsChecked="{Binding PrintDescription}" ToolTip="When active, the description is output before executing the command."
                                                          Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListView}, 
                                                Path=DataContext.ShowDescriptionFields, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                     />
                                            <ToggleButton Grid.Row="1" Grid.Column="1" Margin="5 2" Style="{StaticResource ToggleButton_VisibilityTemplate}" 
                                                          IsChecked="{Binding PrintCommand}" ToolTip="When active, the actual command execution is displayed."/>
                                            <TextBox Grid.Row="0" Grid.Column="2" VerticalContentAlignment="Center" 
                                                     Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"                                                     
                                                     PreviewKeyDown="CommandDescriptionField_PreviewKeyDown"
                                                     Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListView}, 
                                                Path=DataContext.ShowDescriptionFields, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                     Extensions:FocusExtension.IsFocused="{Binding IsDescriptionFocused}"
                                                     />
                                            <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding ExecutionString, UpdateSourceTrigger=PropertyChanged}" 
                                                     VerticalContentAlignment="Center"
                                                     PreviewKeyDown="CommandExecutionField_PreviewKeyDown"
                                                     Extensions:FocusExtension.IsFocused="{Binding IsCommandFocused}"
                                                     FontFamily="Courier New"
                                                     />

                                            <Button Grid.Row="0" Grid.RowSpan="4" Grid.Column="3" FontFamily="Segoe MDL2 Assets" Content="&#xEF2C;" FontWeight="Light"
                                                    Padding="2" FontSize="12" Margin="2 0 0 0" Click="btnRemoveCommand_Click"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <Button Grid.Row="5" Height="Auto" HorizontalAlignment="Left"
                                    Padding="10 4" Margin="5" Click="btnAddCommand_Click"
                                    Background="White">
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="8"/>
                                    </Style>
                                </Button.Resources>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center">add</TextBlock>
                                    <TextBlock VerticalAlignment="Center" Margin="3 0" FontFamily="Segoe MDL2 Assets">&#xECC8;</TextBlock>
                                    <!--<TextBlock>&#xE710;</TextBlock>-->                                    
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Button Grid.Row="4" Width="Auto" Height="Auto" HorizontalAlignment="Center" Content="add new block" Padding="10 4" Margin="5" Click="btnAddContainer_Click">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </Button.Resources>
        </Button>
    </Grid>
</UserControl>
